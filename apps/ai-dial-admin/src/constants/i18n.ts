export enum MenuI18nKey {
  Entities = 'Menu.Entities',
  EntitiesDescription = 'Menu.EntitiesDescription',
  AccessManagement = 'Menu.AccessManagement',
  AccessManagementDescription = 'Menu.AccessManagementDescription',
  Playground = 'Menu.Playground',
  Approvals = 'Menu.Approvals',
  ApprovalsDescription = 'Menu.ApprovalsDescription',
  Deployments = 'Menu.Deployments',
  DeploymentsDescription = 'Menu.DeploymentsDescription',
  Evaluation = 'Menu.Evaluation',
  EvaluationDescription = 'Menu.EvaluationDescription',
  Models = 'Menu.Models',
  Applications = 'Menu.Applications',
  ApplicationRunners = 'Menu.ApplicationRunners',
  Builders = 'Menu.Builders',
  BuildersDescription = 'Menu.BuildersDescription',
  Addons = 'Menu.Addons',
  Adapters = 'Menu.Adapters',
  Assistants = 'Menu.Assistants',
  Assets = 'Menu.Assets',
  AssetsDescription = 'Menu.AssetsDescription',
  Interceptors = 'Menu.Interceptors',
  Keys = 'Menu.Keys',
  Roles = 'Menu.Roles',
  Routes = 'Menu.Routes',
  Prompts = 'Menu.Prompts',
  Files = 'Menu.Files',
  Telemetry = 'Menu.Telemetry',
  TelemetryDescription = 'Menu.TelemetryDescription',
  MCPDescription = 'Menu.MCPDescription',
  Dashboard = 'Menu.Dashboard',
  UsageLog = 'Menu.UsageLog',
  Tools = 'Menu.Tools',
  ToolsDescription = 'Menu.ToolsDescription',
  PromptPublications = 'Menu.PromptPublications',
  FilePublications = 'Menu.FilePublications',
  ImportConfig = 'Menu.ImportConfig',
  ExportConfig = 'Menu.ExportConfig',
  Home = 'Menu.Home',
  Homepage = 'Menu.Homepage',
  FoldersStorage = 'Menu.FoldersStorage',
  MLOps = 'Menu.MLOps',
  MCPServers = 'Menu.MCPServers',
  MCPInstances = 'Menu.MCPInstances',
  ActivityAudit = 'Menu.ActivityAudit',
}

export enum PlaceholderI18nKey {
  NoLimits = 'Placeholder.NoLimits',
  TagsInput = 'Placeholder.TagsInput',
}

export enum AuthI18nKey {
  Login = 'Auth.Login',
  Logout = 'Auth.Logout',
  ModalTitle = 'Auth.ModalTitle',
  ModalDescription = 'Auth.ModalDescription',
}

export enum BasicI18nKey {
  None = 'Basic.None',
  Failed = 'Basic.Failed',
  Enabled = 'Basic.Enabled',
  Disabled = 'Basic.Disabled',
  NoData = 'Basic.NoData',
  Value = 'Basic.Value',
  Settings = 'Basic.Settings',
  Theme = 'Basic.Theme',
  From = 'Basic.From',
  To = 'Basic.To',
  Browse = 'Basic.Browse',
  Move = 'Basic.Move',
  MoveToFolder = 'Basic.MoveToFolder',
  Selected = 'Basic.Selected',
  SelectAll = 'Basic.SelectAll',
  SaveChangesTitle = 'Basic.SaveChangesTitle',
  SaveChangesDescription = 'Basic.SaveChangesDescription',
  SaveParametersTitle = 'Basic.SaveParametersTitle',
  SaveParametersDescription = 'Basic.SaveParametersDescription',
  SaveWithEmptyRolesTitle = 'Basic.SaveWithEmptyRolesTitle',
  SaveWithEmptyRolesDescription = 'Basic.SaveWithEmptyRolesDescription',
  SaveProceedWithConfiguration = 'Basic.SaveProceedWithConfiguration',
  Source = 'Basic.Source',
  Config = 'Basic.Config',
  Show = 'Basic.Show',
  Before = 'Basic.Before',
  After = 'Basic.After',
  CopiedSuccessfully = 'Basic.CopiedSuccessfully',
  ServerError = 'Basic.ServerError',
  Search = 'Basic.Search',
}

export enum CommonControlsI18nKey {
  DnDIconFileTitle = 'CommonControls.DnDIconFile',
  Or = 'CommonControls.Or',
}

export enum FileUploadI18nKey {
  IconModalHeader = 'FileUpload.ModalHeader',
  IconMenuChangeItem = 'FileUpload.MenuChangeItem',
  IconMenuDeleteItem = 'FileUpload.MenuDeleteItem',
}

export enum EntitiesI18nKey {
  NoApplications = 'Entities.NoApplications',
  NoApplicationRunners = 'Entities.NoApplicationRunners',
  NoAddons = 'Entities.NoAddons',
  NoRoutes = 'Entities.NoRoutes',
  NoPrompts = 'Entities.NoPrompts',
  NoFiles = 'Entities.NoFiles',
  NoPublications = 'Entities.NoPublications',
  NoAssistants = 'Entities.NoAssistants',
  NoInterceptors = 'Entities.NoInterceptors',
  NoAdapters = 'Entities.NoAdapters',
  NoEntities = 'Entities.NoEntities',
  NoModels = 'Entities.NoModels',
  NoRoles = 'Entities.NoRoles',
  NoKeys = 'Entities.NoKeys',
  NoDashboard = 'Entities.NoDashboard',
  NoUsageLog = 'Entities.NoUsageLog',
  NoActivityAudit = 'Entities.NoActivityAudit',
  NoFolders = 'Entities.NoFolders',
  NoResource = 'Entities.NoResource',
  Icon = 'Entities.Icon',
  Endpoint = 'Entities.Endpoint',
  EndpointBase = 'Entities.EndpointBase',
  EndpointPlaceholder = 'Entities.EndpointPlaceholder',
  AddEntities = 'Entities.AddEntities',
  MaxRetryAttempts = 'Entities.MaxRetryAttempts',
}

export enum DeleteI18nKey {
  Title = 'DeleteEntity.Title',
  Confirming = 'DeleteEntity.Confirming',
  Model = 'DeleteEntity.Model',
  Application = 'DeleteEntity.Application',
  ApplicationRunnerTitle = 'DeleteEntity.ApplicationRunner.Title',
  ApplicationRunnerDescriptionWarning = 'DeleteEntity.ApplicationRunner.DescriptionWarning',
  ApplicationRunnerApplicationsTitle = 'DeleteEntity.ApplicationRunner.ApplicationsTitle',
  ApplicationRunnerNoApplicationsTitle = 'DeleteEntity.ApplicationRunner.NoApplicationsTitle',
  AdapterTitle = 'DeleteEntity.Adapter.Title',
  AdapterDescriptionWarning = 'DeleteEntity.Adapter.DescriptionWarning',
  AdapterModelsTitle = 'DeleteEntity.Adapter.ModelsTitle',
  AdapterNoModelsTitle = 'DeleteEntity.Adapter.NoModelsTitle',
  Addons = 'DeleteEntity.Addons',
  Role = 'DeleteEntity.Role',
  Interceptor = 'DeleteEntity.Interceptor',
  Key = 'DeleteEntity.Key',
  Assistant = 'DeleteEntity.Assistant',
  Route = 'DeleteEntity.Route',
  Prompt = 'DeleteEntity.Prompt',
  File = 'DeleteEntity.File',
}

export enum DuplicateI18nKey {
  ModelHeader = 'DuplicateEntity.Model.Header',
  ModelDescription = 'DuplicateEntity.Model.Description',
  ApplicationRunnerHeader = 'DuplicateEntity.ApplicationRunner.Header',
  ApplicationHeader = 'DuplicateEntity.Application.Header',
  ApplicationDescription = 'DuplicateEntity.Application.Description',
  AssistantHeader = 'DuplicateEntity.Assistant.Header',
  AssistantDescription = 'DuplicateEntity.Assistant.Description',
  AddonsHeader = 'DuplicateEntity.Addons.Header',
  AddonsDescription = 'DuplicateEntity.Addons.Description',
  RoleHeader = 'DuplicateEntity.Role.Header',
  KeyHeader = 'DuplicateEntity.Key.Header',
  RouteHeader = 'DuplicateEntity.Route.Header',
  PromptHeader = 'DuplicateEntity.Prompt.Header',
  InterceptorHeader = 'DuplicateEntity.Interceptor.Header',
  AdapterHeader = 'DuplicateEntity.Adapter.Header',
}

export enum ButtonsI18nKey {
  Copy = 'Buttons.Copy',
  Create = 'Buttons.Create',
  Update = 'Buttons.Update',
  Cancel = 'Buttons.Cancel',
  Delete = 'Buttons.Delete',
  DeleteAll = 'Buttons.DeleteAll',
  Duplicate = 'Buttons.Duplicate',
  Save = 'Buttons.Save',
  Apply = 'Buttons.Apply',
  Discard = 'Buttons.Discard',
  Add = 'Buttons.Add',
  Columns = 'Buttons.Columns',
  Reset = 'Buttons.Reset',
  ResetToDefault = 'Buttons.ResetToDefault',
  Generate = 'Buttons.Generate',
  Approve = 'Buttons.Approve',
  Decline = 'Buttons.Decline',
  ContinueEditing = 'Buttons.ContinueEditing',
  Import = 'Buttons.Import',
  Export = 'Buttons.Export',
  ExportConfigMap = 'Buttons.ExportConfigMap',
  OpenWithoutSave = 'Buttons.OpenWithoutSave',
  LeaveWithoutSave = 'Buttons.LeaveWithoutSave',
  Next = 'Buttons.Next',
  Previous = 'Buttons.Previous',
  Finish = 'Buttons.Finish',
  Publish = 'Buttons.Publish',
  Unpublish = 'Buttons.Unpublish',
  Rotate = 'Buttons.Rotate',
  ReviewStructure = 'Buttons.ReviewStructure',
  CompareChanges = 'Buttons.CompareChanges',
  Refresh = 'Buttons.Refresh',
  Rollback = 'Buttons.Rollback',
  Back = 'Buttons.Back',
  Close = 'Buttons.Close',
}

export enum CreateI18nKey {
  Model = 'CreateEntity.Model',
  Application = 'CreateEntity.Application',
  Adapter = 'CreateEntity.Adapter',
  ApplicationRunner = 'CreateEntity.ApplicationRunner',
  Addons = 'CreateEntity.Addons',
  Role = 'CreateEntity.Role',
  Key = 'CreateEntity.Key',
  Prompt = 'CreateEntity.Prompt',
  Route = 'CreateEntity.Route',
  Interceptor = 'CreateEntity.Interceptor',
  Assistant = 'CreateEntity.Assistant',
  DeploymentIdTitle = 'CreateEntity.deploymentId.title',
  DeploymentIdPlaceholder = 'CreateEntity.deploymentId.placeholder',
  NameTitle = 'CreateEntity.name.title',
  NamePlaceholder = 'CreateEntity.name.placeholder',
  IdTitle = 'CreateEntity.id.title',
  IdPlaceholder = 'CreateEntity.id.placeholder',
  IdUrlError = 'CreateEntity.id.UrlError',
  KeyTitle = 'CreateEntity.key.title',
  KeyPlaceholder = 'CreateEntity.key.placeholder',
  ErrorKey = 'CreateEntity.key.error',
  ErrorName = 'CreateEntity.name.error',
  LengthError = 'CreateEntity.name.length',
  ErrorLength = 'CreateEntity.errorLength',
  InterceptorName = 'CreateEntity.name.interceptor',
  DisplayNameTitle = 'CreateEntity.displayName.title',
  DisplayNameErrorApplication = 'CreateEntity.displayName.errorApplication',
  DisplayNameErrorAddon = 'CreateEntity.displayName.errorAddon',
  DisplayNameErrorModel = 'CreateEntity.displayName.errorModel',
  DisplayNamePlaceholder = 'CreateEntity.displayName.placeholder',
  ModelDisplayName = 'CreateEntity.displayName.ModelDisplayName',
  ApplicationDisplayName = 'CreateEntity.displayName.ApplicationDisplayName',
  AddonsDisplayName = 'CreateEntity.displayName.AddonsDisplayName',
  VersionTitle = 'CreateEntity.version.title',
  VersionPlaceholder = 'CreateEntity.version.placeholder',
  VersionErrorModel = 'CreateEntity.version.errorApplication',
  VersionErrorApplication = 'CreateEntity.version.errorModel',
  VersionErrorAddon = 'CreateEntity.version.errorAddon',
  DescriptionTitle = 'CreateEntity.description.title',
  DescriptionPlaceholder = 'CreateEntity.description.placeholder',
  DescriptionLengthError = 'CreateEntity.description.length',
  AdapterTitle = 'CreateEntity.adapter.title',
  AdapterPlaceholder = 'CreateEntity.adapter.placeholder',
  ProjectTitle = 'CreateEntity.project.title',
  ProjectPlaceholder = 'CreateEntity.project.placeholder',
  ProjectContactPointTitle = 'CreateEntity.project.contactTitle',
  ProjectContactPointPlaceholder = 'CreateEntity.project.contactPlaceholder',
  SecuredTitle = 'CreateEntity.SecuredTitle',
  ValidityPeriodTitle = 'CreateEntity.ValidityPeriodTitle',
  ExpirationTimeTitle = 'CreateEntity.ExpirationTimeTitle',
  ContentTitle = 'CreateEntity.content.title',
  ContentPlaceholder = 'CreateEntity.content.placeholder',
  StoragePathTitle = 'CreateEntity.storage.title',
  StoragePathPlaceholder = 'CreateEntity.storage.placeholder',
  ViewerUrlTitle = 'CreateEntity.viewerUrl.title',
  ViewerUrlPlaceholder = 'CreateEntity.viewerUrl.placeholder',
  EditorUrlTitle = 'CreateEntity.editorUrl.title',
  EditorUrlPlaceholder = 'CreateEntity.editorUrl.placeholder',
  CompletionEndpointTitle = 'CreateEntity.completionEndpoint.title',
  CompletionEndpointPlaceholder = 'CreateEntity.completionEndpoint.placeholder',
  RunnerName = 'CreateEntity.runner.title',
  RunnerPlaceholder = 'CreateEntity.runner.placeholder',
  NameVersionCombinationError = 'CreateEntity.nameVersionCombinationError',
  SchemeTitle = 'CreateEntity.Scheme',
  ErrorUnique = 'CreateEntity.ErrorUnique',
}

export enum UpstreamEndpointsI18nKey {
  Upstream = 'UpstreamEndpoints.Upstream',
  AddUpstream = 'UpstreamEndpoints.AddUpstream',
  UpstreamEndpoints = 'UpstreamEndpoints.UpstreamEndpoints',
  UpstreamEndpointsPlaceholder = 'UpstreamEndpoints.UpstreamEndpointsPlaceholder',
  UpstreamKey = 'UpstreamEndpoints.UpstreamKey',
  UpstreamKeyPlaceholder = 'UpstreamEndpoints.UpstreamKeyPlaceholder',
  Tier = 'UpstreamEndpoints.Tier',
  TierPlaceholder = 'UpstreamEndpoints.TierPlaceholder',
  Weight = 'UpstreamEndpoints.Weight',
  WeightPlaceholder = 'UpstreamEndpoints.WeightPlaceholder',
  ExtraDataTitle = 'UpstreamEndpoints.ExtraDataTitle',
  ExtraDataString = 'UpstreamEndpoints.ExtraDataString',
  ExtraDataStringPlaceholder = 'UpstreamEndpoints.ExtraDataStringPlaceholder',
  ExtraDataJson = 'UpstreamEndpoints.ExtraDataJson',
}

export enum ModelViewI18nKey {
  OverrideName = 'ModelView.OverrideName',
  OverrideNamePlaceholder = 'ModelView.OverrideNamePlaceholder',
  Type = 'ModelView.Type',
  Embedding = 'ModelView.Embedding',
  Chat = 'ModelView.Chat',
  TokenizerModel = 'ModelView.TokenizerModel',

  // InteractionLimit
  InteractionLimit = 'ModelView.InteractionLimit.InteractionLimit',
  TotalNumbers = 'ModelView.InteractionLimit.TotalNumbers',
  Prompts = 'ModelView.InteractionLimit.Prompts',
  Completions = 'ModelView.InteractionLimit.Completions',
  NumberOfTokens = 'ModelView.InteractionLimit.NumberOfTokens',
  SeparatelyPromptsAndCompletions = 'ModelView.InteractionLimit.SeparatelyPromptsAndCompletions',

  // Pricing
  CostUnit = 'ModelView.Pricing.CostUnit',
  PromptPrice = 'ModelView.Pricing.Prompt',
  CompletionPrice = 'ModelView.Pricing.Completion',
  Tokens = 'ModelView.Pricing.Tokens',
  CharWithoutWhitespace = 'ModelView.Pricing.CharWithoutWhitespace',
}

export enum AttachmentsI18nKey {
  Attachments = 'Attachments.Attachments',
  AllAttachments = 'Attachments.AllAttachments',
  CustomAttachments = 'Attachments.CustomAttachments',
  EnterAttachmentsTypes = 'Attachments.EnterAttachmentsTypes',
  AttachmentsMaxNumber = 'Attachments.AttachmentsMaxNumber',
  AttachmentsMaxNumberPlaceholder = 'Attachments.AttachmentsMaxNumberPlaceholder',
}

export enum KeysI18nKey {
  SaveWithoutRoles = 'Keys.SaveWithoutRoles',
  SaveWithoutRolesDescriptions = 'Keys.SaveWithoutRolesDescriptions',
  AddKeys = 'Keys.AddKeys',
  NoRoles = 'Keys.Status.NoRoles',
  Expired = 'Keys.Status.Expired',
  AlmostExpired = 'Keys.Status.AlmostExpired',
  ExpirationTime = 'Keys.ExpirationTime',
  Valid = 'Keys.Status.Valid',
  PeriodDay = 'Keys.Period.Day',
  PeriodWeek = 'Keys.Period.Week',
  PeriodMonth = 'Keys.Period.Month',
  PeriodMonths = 'Keys.Period.Months',
  PeriodYear = 'Keys.Period.Year',
  RotateKeyTitle = 'Keys.RotateKeyTitle',
  RotateKeyDescription = 'Keys.RotateKeyDescription',
  RotateKeySuccessTitle = 'Keys.RotateKeySuccessTitle',
  RotateKeySuccessDescription = 'Keys.RotateKeySuccessDescription',
}

export enum RolesI18nKey {
  TokensPerDay = 'Roles.TokensPerDay',
  TokensPerMinute = 'Roles.TokensPerMinute',
  TokensPerWeek = 'Roles.TokensPerWeek',
  TokensPerMonth = 'Roles.TokensPerMonth',
  AddRoles = 'Roles.AddRoles',
  AvailableSpecificRoles = 'Roles.AvailableSpecificRoles',
  SpecificLimitsResetTitle = 'Roles.SpecificLimitsResetTitle',
  SpecificLimitsResetDescription = 'Roles.SpecificLimitsResetDescription',
  ResetToDefaultLimits = 'Roles.ResetToDefaultLimits',
}

export enum ForwardTokenI18nKey {
  ForwardToken = 'ForwardToken.ForwardToken',
  UseForThisModel = 'ForwardToken.UseForThisModel',
  UseForThisApplication = 'ForwardToken.UseForThisApplication',
  UseForThisAddon = 'ForwardToken.UseForThisAddon',
  UseForThisInterceptor = 'ForwardToken.UseForThisInterceptor',
  ForwardTokenModalTitle = 'ForwardToken.ForwardTokenModalTitle',
  ForwardTokenModalAlert = 'ForwardToken.ForwardTokenModalAlert',
}

export enum FeaturesI18nKey {
  Tools = 'Features.Tools',
  SystemPrompt = 'Features.SystemPrompt',
  Seed = 'Features.Seed',
  URLAttachments = 'Features.URLAttachments',
  FolderAttachments = 'Features.FolderAttachments',
  ExposedToUser = 'Features.ExposedToUser',
  ConfigurationEndpoint = 'Features.ConfigurationEndpoint',
  ConfigurationEndpointPlaceholder = 'Features.ConfigurationEndpointPlaceholder',
  RateEndpoint = 'Features.RateEndpoint',
  RateEndpointPlaceholder = 'Features.RateEndpointPlaceholder',
  TokenizeEndpoint = 'Features.TokenizeEndpoint',
  TokenizeEndpointPlaceholder = 'Features.TokenizeEndpointPlaceholder',
  TruncatePromptEndpoint = 'Features.TruncatePromptEndpoint',
  TruncatePromptEndpointPlaceholder = 'Features.TruncatePromptEndpointPlaceholder',
  Temperature = 'Features.Temperature',
}

export enum TopicsI18nKey {
  Topics = 'Topics.Topics',
  AddTopic = 'Topics.AddTopic',
  AddTopicPlaceholder = 'Topics.AddTopicPlaceholder',
}

export enum TabsI18nKey {
  Properties = 'Tabs.Properties',
  Features = 'Tabs.Features',
  Roles = 'Tabs.Roles',
  Interceptors = 'Tabs.Interceptors',
  Keys = 'Tabs.Keys',
  Entities = 'Tabs.Entities',
  Parameters = 'Tabs.Parameters',
  Applications = 'Tabs.Applications',
  Models = 'Tabs.Models',
  Dashboard = 'Tabs.Dashboard',
}

export enum EditorI18nKey {
  ErrorLine = 'Editor.ErrorLine',
}

export enum InterceptorsI18nKey {
  Add = 'Interceptors.Add',
}

export enum ReloadConfigI18nKey {
  Reload = 'ReloadConfig.Reload',
  ReloadTitle = 'ReloadConfig.ReloadTitle',
  ReloadDescription = 'ReloadConfig.ReloadDescription',
  ConfigReloadedTitle = 'ReloadConfig.ConfigReloadedTitle',
  ConfigReloadedDescription = 'ReloadConfig.ConfigReloadedDescription',
}

export enum TelemetryI18nKey {
  SystemUsage = 'Telemetry.SystemUsage',
  EntitiesConsumption = 'Telemetry.EntitiesConsumption',
  ProjectsConsumption = 'Telemetry.ProjectsConsumption',
  AutoRefresh = 'Telemetry.AutoRefresh',
  AddFilter = 'Telemetry.AddFilter',
  TimePeriod = 'Telemetry.TimePeriod',
  CustomTimeRage = 'Telemetry.CustomTimeRage',
  UniqueUsers = 'Telemetry.UniqueUsers',
  RequestCount = 'Telemetry.RequestCount',
  TotalTokens = 'Telemetry.TotalTokens',
  Money = 'Telemetry.Money',
  Grafana = 'Telemetry.OpenGrafana',
  FilterTypeProjects = 'Telemetry.Filter.TypeProjects',
  FilterTypeEntities = 'Telemetry.Filter.TypeEntities',
  FilterConditionContain = 'Telemetry.Filter.ConditionContain',
  FilterConditionNotContain = 'Telemetry.Filter.ConditionNotContain',
  FilterConditionEqual = 'Telemetry.Filter.ConditionEqual',
  FilterConditionNotEqual = 'Telemetry.Filter.ConditionNotEqual',
  FilterConditionStartsWith = 'Telemetry.Filter.ConditionStartsWith',
  FilterConditionEndsWith = 'Telemetry.Filter.ConditionEndsWith',
  FilterDurationSeconds = 'Telemetry.Filter.Duration.Seconds',
}

export enum RoutesI18nKey {
  AddPaths = 'Routes.AddPaths',
  PathPlaceholder = 'Routes.PathPlaceholder',
  PathTitle = 'Routes.PathTitle',
  RewritePath = 'Routes.RewritePath',
  Output = 'Routes.Output',
  Upstreams = 'Routes.Upstreams',
  Response = 'Routes.Response',
  KeysPlaceholder = 'Routes.KeysPlaceholder',
  StatusTitle = 'Routes.StatusTitle',
  StatusPlaceholder = 'Routes.StatusPlaceholder',
  BodyTitle = 'Routes.BodyTitle',
  BodyPlaceholder = 'Routes.BodyPlaceholder',
  RequiredProperty = 'Routes.RequiredProperty',
  MethodsTitle = 'Routes.MethodsTitle',
  InvalidPath = 'Routes.InvalidPath',
  InvalidStatus = 'Routes.InvalidStatus',
}

export enum PublicationsI18nKey {
  PromptPublishApproveModalTitle = 'Publications.Prompt.PublishApproveModalTitle',
  PromptPublishDeclineModalTitle = 'Publications.Prompt.PublishDeclineModalTitle',
  PromptUnpublishApproveModalTitle = 'Publications.Prompt.UnpublishApproveModalTitle',
  PromptUnpublishDeclineModalTitle = 'Publications.Prompt.UnpublishDeclineModalTitle',
  PromptPublishApproveDescription = 'Publications.Prompt.PublishApproveDescription',
  PromptUnpublishApproveDescription = 'Publications.Prompt.UnpublishApproveDescription',
  DeclineReason = 'Publications.Prompt.ReasonTitle',
  DeclineReasonPlaceholder = 'Publications.Prompt.ReasonPlaceholder',
  FilePublishApproveModalTitle = 'Publications.Files.PublishApproveModalTitle',
  FilePublishDeclineModalTitle = 'Publications.Files.PublishDeclineModalTitle',
  FileUnpublishApproveModalTitle = 'Publications.Files.UnpublishApproveModalTitle',
  FileUnpublishDeclineModalTitle = 'Publications.Files.UnpublishDeclineModalTitle',
  FilePublishApproveDescription = 'Publications.Files.PublishApproveDescription',
  FileUnpublishApproveDescription = 'Publications.Files.UnpublishApproveDescription',
  OpenPrompt = 'Publications.Prompt.OpenPrompt',
  TestPrompt = 'Publications.Prompt.TestPrompt',
  Version = 'Publications.Prompt.Version',
  Description = 'Publications.Prompt.Description',
  Content = 'Publications.Prompt.Content',
  ActionPublish = 'Publications.ActionPublish',
  ActionUnpublish = 'Publications.ActionUnpublish',
  Action = 'Publications.Action',
  Author = 'Publications.Author',
  CreatedAt = 'Publications.CreatedAt',
  FolderStorage = 'Publications.FolderStorage',
  FilesListTitle = 'Publications.Files.FilesListTitle',
}

export enum PromptsI18nKey {
  NewVersion = 'Prompts.NewVersion',
  NewPrompt = 'Prompts.NewPrompt',
  DuplicationType = 'Prompts.DuplicationType',
  Export = 'Prompts.Export',
  Import = 'Prompts.Import',
}

export enum ImportI18nKey {
  ConflictResolution = 'Import.ConflictResolution',
  ConfigImported = 'Import.ConfigImported',
  ConfigImportedDescription = 'Import.ConfigImportedDescription',
  Override = 'Import.Override',
  Skip = 'Import.Skip',
  Update = 'Import.Update',
  Create = 'Import.Create',
  EditManually = 'Import.EditManually',
  Files = 'Import.Files',
  DropFiles = 'Import.DropFiles',
  DropZip = 'Import.DropZip',
  File = 'Import.File',
  DropFile = 'Import.DropFile',
  ImportFiles = 'Import.ImportFiles',
  ImportProperties = 'Import.ImportProperties',
  ImportConfiguration = 'Import.ImportConfiguration',
  ConfigurationParsing = 'Import.ConfigurationParsing',
  FileType = 'Import.FileType',
  SeparateJsonFiles = 'Import.SeparateJsonFiles',
  DialArchive = 'Import.DialArchive',
  DialArchiveDescription = 'Import.DialArchiveDescription',
  ImportArchiveDescription = 'Import.ImportArchiveDescription',
  ImportJsonFileFormatError = 'Import.ImportJsonFileFormatError',
  ImportArchiveFileFormatError = 'Import.ImportArchiveFileFormatError',
  ImportJsonDescription = 'Import.ImportJsonDescription',
  ImportSeparateFiles = 'Import.ImportSeparateFiles',
  ImportSeparateFilesDescription = 'Import.ImportSeparateFilesDescription',
  DropAnyFile = 'Import.DropAnyFile',
  ImportPrepareTitle = 'Import.ImportPrepareTitle',
  ImportPrepareDescription = 'Import.ImportPrepareDescription',
  ImportSuccessTitle = 'Import.ImportSuccessTitle',
  ImportSuccessDescription = 'Import.ImportSuccessDescription',
  ImportErrorTitle = 'Import.ImportErrorTitle',
  ImportErrorDescription = 'Import.ImportErrorDescription',
  ImportSkipTitle = 'Import.ImportSkipTitle',
  ImportSkipDescription = 'Import.ImportSkipDescription',
  ImportPromptError = 'Import.ImportPromptError',
  ImportFileError = 'Import.ImportFileError',
  ImportFileErrorType = 'Import.ImportFileErrorType',
  ImportArchiveErrorTitle = 'Import.ImportArchiveErrorTitle',
}

export enum ExportI18nKey {
  Structure = 'Export.Structure',
  ExportFormat = 'Export.ExportFormat',
  ExportType = 'Export.ExportType',
  FullConfig = 'Export.FullConfig',
  Custom = 'Export.Custom',
  Dependencies = 'Export.Dependencies',
  AdminFormat = 'Export.AdminFormat',
  CoreFormat = 'Export.CoreFormat',
  ExportSuccessTitle = 'Export.ExportSuccessTitle',
  ExportSuccessDescription = 'Export.ExportSuccessDescription',
  ExportErrorTitle = 'Export.ExportErrorTitle',
  ExportErrorDescription = 'Export.ExportErrorDescription',
  ExportFilePreview = 'Export.ExportFilePreview',
  IncludeSecrets = 'Export.IncludeSecrets',
  IncludeDependencies = 'Export.IncludeDependencies',
  Included = 'Export.Included',
  FilePreparation = 'Export.FilePreparation',
  Folders = 'Export.Folders',
}

export enum FoldersI18nKey {
  Import = 'Folder.Import',
  Export = 'Folder.Export',
  NoRules = 'Folder.NoRules',
  AllRules = 'Folder.AllRules',
  Permissions = 'Folder.Permissions',
  NoPermissions = 'Folder.NoPermissions',
  ComparePermissions = 'Folder.ComparePermissions',
  ReviewStructure = 'Folder.ReviewStructure',
  Proposed = 'Folder.Proposed',
  Current = 'Folder.Current',
  Or = 'Folder.Or',
  And = 'Folder.And',
  AttributeTitle = 'Folder.AttributeTitle',
  AttributePlaceholder = 'Folder.AttributePlaceholder',
  OperationTitle = 'Folder.OperationTitle',
  OperationPlaceholder = 'Folder.OperationPlaceholder',
  ValueTitle = 'Folder.ValueTitle',
  ValuePlaceholder = 'Folder.ValuePlaceholder',
  RegexPlaceholder = 'Folder.RegexPlaceholder',
  equal = 'Folder.Function.Equal',
  contain = 'Folder.Function.Contain',
  regex = 'Folder.Function.Regex',
  Title = 'Folder.Attribute.Title',
  JobTitle = 'Folder.Attribute.JobTitle',
  Role = 'Folder.Attribute.Role',
  DialRoles = 'Folder.Attribute.DialRoles',
  Groups = 'Folder.Attribute.Groups',
  FolderSetup = 'Folder.FolderSetup',
  FileReview = 'Folder.FileReview',
  FolderCreate = 'Folder.FolderCreate',
  FolderCreatePlaceholder = 'Folder.FolderCreatePlaceholder',
  FolderCreateSuccess = 'Folder.FolderCreateSuccess',
}

export enum ActivityAuditI18nKey {
  ResourceDiff = 'ActivityAudit.ResourceDiff',
  RollbackResource = 'ActivityAudit.RollbackResource',
  RollbackSystem = 'ActivityAudit.RollbackSystem',
  ConfirmRollback = 'ActivityAudit.ConfirmRollback',
  ConfirmSystemRollback = 'ActivityAudit.ConfirmSystemRollback',
  ConfirmSystemRollbackDescription = 'ActivityAudit.ConfirmSystemRollbackDescription',
  ConfirmSystemRollbackAlert = 'ActivityAudit.ConfirmSystemRollbackAlert',
  ConfirmSystemRollbackLabel = 'ActivityAudit.ConfirmSystemRollbackLabel',
  ConfirmSystemRollbackPlaceholder = 'ActivityAudit.ConfirmSystemRollbackPlaceholder',
  ConfirmRollbackDescriptionPart1 = 'ActivityAudit.ConfirmRollbackDescription.Part1',
  ConfirmRollbackDescriptionPart2 = 'ActivityAudit.ConfirmRollbackDescription.Part2',
  ConfirmRollbackDescriptionPart3 = 'ActivityAudit.ConfirmRollbackDescription.Part3',
  ConfirmSelectionRollbackDescription = 'ActivityAudit.ConfirmSelectionRollbackDescription',
  ConfirmRollbackAsking = 'ActivityAudit.ConfirmRollbackAsking',
  ResourceRollback = 'ActivityAudit.ResourceRollback',
  ResourceRollbackDescription = 'ActivityAudit.ResourceRollbackDescription',
  ResourceRollbackErrorTitle = 'ActivityAudit.ResourceRollbackErrorTitle',
  ResourceRollbackErrorDescription = 'ActivityAudit.ResourceRollbackErrorDescription',
  AllParameters = 'ActivityAudit.AllParameters',
  Differences = 'ActivityAudit.Differences',
  ActivityType = 'ActivityAudit.ActivityType',
  ResourceType = 'ActivityAudit.ResourceType',
  ResourceId = 'ActivityAudit.ResourceId',
  Time = 'ActivityAudit.Time',
  Initiated = 'ActivityAudit.Initiated',
  CurrentState = 'ActivityAudit.CurrentState',
  RollbackState = 'ActivityAudit.RollbackState',
}

export enum ErrorI18nKey {
  EmptyField = 'Error.EmptyField',
  PageNotFound = 'Error.PageNotFound',
  ResourceNotFound = 'Error.ResourceNotFound',
  CheckUrl = 'Error.CheckUrl',
  AccessForbidden = 'Error.AccessForbidden',
  AccessDenied = 'Error.AccessDenied',
  AccessRefer = 'Error.AccessRefer',
  MaintenanceInProgress = 'Error.MaintenanceInProgress',
  SystemUnavailable = 'Error.SystemUnavailable',
  TryAgainLater = 'Error.TryAgainLater',
  IncorrectEndpoint = 'Error.IncorrectEndpoint',
  WarningEndpoint = 'Error.WarningEndpoint',
}
